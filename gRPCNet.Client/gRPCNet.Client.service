# https://swimburger.net/blog/dotnet/how-to-run-aspnet-core-as-a-service-on-linux
# This file needs to exist in the /etc/systemd/system/ directory
# Once the file exists in the directory run the following for systemd to load the new configuration file 
# using the systemctl command which is how you interact with systemd:
#		$ sudo systemctl daemon-reload
# After that if you can run the following to see that systemd knows about your service:
#		$ sudo systemctl status gRPCNet.Client
# We can start or stop our service by running:
#		$ sudo systemctl start gRPCNet.Client
#		$ sudo systemctl stop gRPCNet.Client
# If you want your service to start when the machine does then you can use:
#		$ sudo systemctl enable gRPCNet.Client
# We can view the logs of our service by using journalctl, a command to access the logs:
#		$ sudo journalctl -u gRPCNet.Client
[Unit]
Description=gRPCNet client service

[Service]
Type=notify

# will set the Current Working Directory (CWD)
WorkingDirectory=/srv/gRPCNet.Client

# systemd will run this executable to start the service
ExecStart=/srv/gRPCNet.Client/gRPCNet.Client

# to query logs using journalctl, set a logical name here
SyslogIdentifier=gRPCNet.Client

# Use your username to keep things simple, for production scenario's I recommend a dedicated user/group.
# If you pick a different user, make sure dotnet and all permissions are set correctly to run the app.
# To update permissions, use 'chown yourusername -R /srv/gRPCNet.Client' to take ownership of the folder and files,
#       Use 'chmod +x /srv/gRPCNet.Client/gRPCNet.Client' to allow execution of the executable file.
User=ubuntu

# ensure the service restarts after crashing
Restart=always

# amount of time to wait before restarting the service
RestartSec=30

# TimeoutStopSec defaults to the value of DefaultTimeoutStopSec in the manager configuration file (systemd-system.conf, system.conf.d, systemd-user.conf, user.conf.d). 
# The default timeout for most distributions is 90 seconds.
TimeoutStopSec=30

# copied from dotnet documentation at
# https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-3.1#code-try-7
KillSignal=SIGINT
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false

# This environment variable is necessary when dotnet isn't loaded for the specified user.
# To figure out this value, run 'env | grep DOTNET_ROOT' when dotnet has been loaded into your shell.
Environment=DOTNET_ROOT=/home/ubuntu/dotnet

[Install]
WantedBy=multi-user.target